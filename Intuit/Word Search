import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    public static void main(String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while(T-->0)
        {
            String[] S = br.readLine().trim().split(" ");
            int n = Integer.parseInt(S[0]);
            int m = Integer.parseInt(S[1]);
            char [][] board = new char[n][m];
            for(int i = 0; i < n; i++){
                String[] s = br.readLine().trim().split(" ");
                for(int j = 0; j < m; j++){
                    board[i][j] = s[j].charAt(0);
                }
            }
            String word = br.readLine().trim();
            Solution obj = new Solution();
            boolean ans = obj.isWordExist(board, word);
            if(ans)
                System.out.println("1");
            else
                System.out.println("0");
       }
    }
}// } Driver Code Ends


class Solution
{
    int[][] dir = {{0,1},{1,0},{-1,0},{0,-1}};
    public boolean isWordExist(char[][] board, String word)
    {
        int m = board.length, n = board[0].length;
        for (int i = 0; i < m; i++){
            for (int j = 0; j < n; j++){
                if (board[i][j] == word.charAt(0)){
                    if (dfs(board, word, i, j, 0)) return true;
                }
            }
        }
        return false;
    }
    public boolean dfs(char[][] board, String str, int r, int c, int pos){
        if (r < 0 || r >= board.length || c < 0 || c >= board[0].length) return false;
        if (pos == str.length()) return true;
        if (str.charAt(pos) == board[r][c]){
            char temp = board[r][c];
            board[r][c] = '-';
            boolean ans = dfs(board, str, r+1, c, pos+1) ||
            dfs(board, str, r, c+1, pos+1) || dfs(board, str, r-1, c, pos+1) ||
            dfs(board, str, r, c-1, pos+1);
            board[r][c] = temp;
            return ans;
        }
        return false;
    }
}
